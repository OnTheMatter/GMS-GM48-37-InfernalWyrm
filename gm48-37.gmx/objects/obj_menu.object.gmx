<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//god this is sloppy....Oh well, haha. 
//Curse the HTML5 Export!
randomize();

if (!instance_exists(obj_data_manager))
{
    global.level_count = 13;
}

ini_open("InfernalWyrmSaveData");
for (var i = 0; i &lt; global.level_count; i++)
{
    lvl_completion_checker[i] = ini_read_real("Level Completion","lvl" + string(i + 1),false);
    lvl_buttons[i] = instance_create(room_width/2 + random_range(-360,-360),room_height/2 + random_range(-360,360),obj_button);
    lvl_buttons[i].sprite_index = get_button_sprite(i,!lvl_completion_checker[i])
    instance_deactivate_object(lvl_buttons[i]);
}
ini_close();

current_layer = 0;
survival_timer = 0;
survival_kills = 0;
ini_open("InfernalWyrmSaveData");
survival_timer_highscore = ini_read_real("Survival Stats","timehighscore",0);
survival_kills_highscore = ini_read_real("Survival Stats","killshighscore",0);
ini_close();

layer[0,0] = instance_create(room_width/2 + random_range(-360,-360),room_height/2 + random_range(-360,360), obj_button);
layer[0,1] = instance_create(room_width/2 + random_range(-360,-360),room_height/2 + random_range(-360,360),obj_button);
layer[0,1].sprite_index = sprite53_button_quit;
layer[0,2] = instance_create(room_width/2 + random_range(-360,-360),room_height/2 + random_range(-360,360), obj_button);
layer[0,2].sprite_index = sprite59_button_tutorial;
layer[0,3] = instance_create(room_width/2 + random_range(-360,-360),room_height/2 + random_range(-360,360), obj_button);
layer[0,3].sprite_index = sprite60_button_survival;
layer[0,4] = instance_create(room_width/2 + random_range(-360,-360),room_height/2 + random_range(-360,360), obj_button);
layer[0,4].sprite_index = button_removestars;
layer[1,0] = instance_create(room_width/2 + random_range(-360,-360),room_height/2 + random_range(-360,360), obj_button);
layer[1,0].sprite_index = sprite48_button_back;
instance_deactivate_object(layer[1,0]);

if (instance_exists(obj_data_manager))
{
    ini_open("InfernalWyrmSaveData")
    for (var i = global.level_count-1; i &gt;= 0;i--) 
    {
        if (ini_read_real("Level Completion","lvl" + string(i+1),"0"))
        {
            var b = instance_create(room_width/2 + random_range(-360,-360),room_height/2 + random_range(-360,360),obj_button);
            b.sprite_index = sprite34_star;
            b.wander_speed = (i + 1)*0.08;
            b.image_xscale = 0.2;
            b.image_yscale = 0.2;
        }
    }
    ini_close();
}

reset_timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(current_layer)
{
    case 0:
        if (layer[0,0].pressed)
        {
            current_layer = 1;
            instance_activate_object(layer[1,0]);
            instance_deactivate_object(layer[0,0]);
            instance_deactivate_object(layer[0,1]);
            instance_deactivate_object(layer[0,2]);
            instance_deactivate_object(layer[0,3]);
            instance_deactivate_object(layer[0,4]);
            for (var i = 0; i &lt; global.level_count; i++)
            {
                if (i != 0)
                {
                    if (lvl_completion_checker[i] or lvl_completion_checker[i - 1])
                    {
                        instance_activate_object(lvl_buttons[i]);
                    }
                }
                else
                {
                    instance_activate_object(lvl_buttons[i]);
                }
                
            }
        }
        else if (layer[0,1].pressed)
        {
            game_end();
        }
        else if (layer[0,2].pressed) and (!instance_exists(obj_story_text))
        {
            var s = instance_create(800,100,obj_story_text);
            s.text = "WASD, or the arrow keys, are used for movement.# Use the toxic trail you leave behind# to destroy your enemies.";
            s.fadeaway_start_alpha = 10;
            s.min_size = 1;
            s.shake_distance = 0;
            s.wait_on_playerspawn = false;
            s.color = c_white;
            
            var s1 = instance_create(800,256,obj_story_text);
            s1.text = "The goal of each level is to convert# the area you are in by destroying#the host cells and antibodies.";
            s1.fadeaway_start_alpha = 10;
            s1.min_size = 1;
            s1.shake_distance = 0;
            s1.wait_on_playerspawn = false;
            s1.color = c_white;
            
            var s2 = instance_create(800,378,obj_story_text);
            s2.text = "Press the SPACE key to fire infectious eyeball projectiles,# it's important to maintain distance from his cells.";
            s2.fadeaway_start_alpha = 15;
            s2.min_size = 1;
            s2.shake_distance = 0;
            s2.wait_on_playerspawn = false;
            s2.color = c_white;
            
            var s3 = instance_create(800,512,obj_story_text);
            s3.text = "You can grab and throw these buttons# in the menu by holding down#the Right Mouse Button while over one.";
            s3.fadeaway_start_alpha = 15;
            s3.min_size = 1;
            s3.shake_distance = 0;
            s3.wait_on_playerspawn = false;
            s3.color = c_white;
            
            var s4 = instance_create(800,640,obj_story_text);
            s4.text = "Red blood cells drop O2,# small blue objects which when collected will# make you stronger and heal you some.";
            s4.fadeaway_start_alpha = 15;
            s4.min_size = 1;
            s4.shake_distance = 0;
            s4.wait_on_playerspawn = false;
            s4.color = c_white;
            
            var s5 = instance_create(300,512,obj_story_text);
            s5.text = "Avoid white, cleansing trails while#using your dark, toxic trails.";
            s5.fadeaway_start_alpha = 15;
            s5.min_size = 1;
            s5.shake_distance = 2;
            s5.wait_on_playerspawn = false;
            s5.color = c_white;
            
            var s6 = instance_create(300,128,obj_story_text);
            s6.text = "BEWARE OF ACID.";
            s6.fadeaway_start_alpha = 15;
            s6.min_size = 1;
            s6.shake_distance = 2;
            s6.wait_on_playerspawn = false;
            s6.color = c_white;
            
        }
        else if (layer[0,3].pressed)
        {
            current_layer = 2;
            if (instance_exists(obj_title)) obj_title.image_alpha = 0;
            instance_deactivate_object(layer[0,0]);
            instance_deactivate_object(layer[0,1]);
            instance_deactivate_object(layer[0,2]);
            instance_deactivate_object(layer[0,3]);
            instance_deactivate_object(layer[0,4]);
            instance_deactivate_object(layer[1,0]);  
            for (var i = 0; i &lt; global.level_count; i++)
            {
                instance_deactivate_object(lvl_buttons[i]);
            }
        }
        else if (layer[0,4].pressed)
        {
            with(obj_button)
            {
                if (sprite_index == sprite34_star)
                {
                    instance_destroy();
                }
            }
        }
        
    break;
    
    case 1:
        if (layer[1,0].pressed)
        {
            current_layer = 0;
            instance_activate_object(layer[0,0]);
            instance_activate_object(layer[0,1]);
            instance_activate_object(layer[0,2]);
            instance_activate_object(layer[0,3]);
            instance_activate_object(layer[0,4]);
            instance_deactivate_object(layer[1,0]);
            for (var i = 0; i &lt; global.level_count; i++)
            {
                instance_deactivate_object(lvl_buttons[i]);
            }      
        }
        else
        {
            for (var i = 0; i &lt; global.level_count; i++)
            {
                if (instance_exists(lvl_buttons[i]))
                {
                    if (lvl_buttons[i].pressed)
                    {
                        room_goto(get_lvl(i));
                    }
                }
            }
        }
    break;
    
    case 2:
        var spawn_dir = random(360);
        var spawn_dis = 1000;
        var spawn_pos_x = room_width/2 + lengthdir_x(spawn_dis,spawn_dir);
        var spawn_pos_y = room_height/2 + lengthdir_y(spawn_dis,spawn_dir);
        
        if (irandom_range(1,300 + min((survival_timer)/room_speed,50)) == 1)
        {
            instance_create(spawn_pos_x,spawn_pos_y,obj_redbloodcell);
        }
        
        if (irandom_range(1,700) == 1)
        {
            instance_create(spawn_pos_x,spawn_pos_y,obj_whitebloodcell);
        }
        
        if (irandom_range(1,1000) == 1)
        {
            instance_create(spawn_pos_x,spawn_pos_y,obj_whitebloodcell_armed);
        }
        
        if (irandom_range(1,1750) == 1)
        {
            instance_create(spawn_pos_x,spawn_pos_y,obj_superredbloodcell);
        }
        
        if (survival_timer &gt; 120*room_speed)
        {
            if (irandom_range(1,1300) == 1)
            {
                var hhh = instance_create(spawn_pos_x,spawn_pos_y,obj_lvl5_boss);
                hhh.hp = round(hhh.hp*0.5);
            }
            
            if (irandom_range(1,2000) == 1)
            {
                var hhh = instance_create(spawn_pos_x,spawn_pos_y,obj_lvl10_boss);
                hhh.hp = round(hhh.hp*0.5);
                hhh.image_xscale = 0.5;
                hhh.image_yscale = 0.5;
            }
        }
        
        survival_timer++;
    
        if (!instance_exists(obj_player))
        {
            ini_open("InfernalWyrmSaveData");
            if (survival_timer &gt; survival_timer_highscore) 
            {
                survival_timer_highscore = survival_timer;
                ini_write_real("Survival Stats","timehighscore",survival_timer_highscore);
            }
            
            if (survival_kills &gt; survival_kills_highscore) 
            {
                survival_kills_highscore = survival_kills;
                ini_write_real("Survival Stats","killshighscore",survival_kills_highscore);
            }
            ini_close();
            var s = instance_create(room_width/2,room_height/2 + 64,obj_story_text);
            s.text = "Time : " + string(round(survival_timer/room_speed)) + "s - Highscore : " + string(round(survival_timer_highscore/room_speed)) + "s";
            s.wait_on_playerspawn = false;
            s.fadeaway_start_alpha = 5;
            var s = instance_create(room_width/2,room_height/2 + 128,obj_story_text);
            s.text = "Kills : " + string(round(survival_kills)) + " Cells - Highscore : " + string(round(survival_kills_highscore)) + " Cells";
            s.wait_on_playerspawn = false;
            s.fadeaway_start_alpha = 5;
            survival_timer = 0;
            survival_kills = 0;
            current_layer = 0;
            if (instance_exists(obj_title)) obj_title.image_alpha = 1;
            instance_activate_object(layer[0,0]);
            instance_activate_object(layer[0,1]);
            instance_activate_object(layer[0,2]);
            instance_activate_object(layer[0,3]);
            instance_activate_object(layer[0,4]);
            instance_deactivate_object(layer[1,0]);    
            for (var i = 0; i &lt; global.level_count; i++)
            {
                instance_deactivate_object(lvl_buttons[i]);
            }   
            instance_create(room_width/2,room_height/2,obj_player);
        }
    break;
}

if (current_layer != 2)
{
    if (irandom_range(1,300) &lt;= 1)
    {
        background_index[0] = choose(background_1,background_2);
    }
    
    if (irandom_range(1,50000) &lt;= 1)
    {
        background_index[0] = choose(background_5,background_6,background_7,background_11);
    }
}



if (!instance_exists(obj_player))
{
    instance_create(room_width/2,room_height/2,obj_player);
}

if (reset_timer-- &gt; 600)
{
    ini_open("InfernalWyrmSaveData");
    for (var i = 0; i &lt; global.level_count; i++)
    {
        ini_write_real("Level Completion","lvl" + string(i + 1),false);
    }
    ini_close();
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="36">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reset_timer += 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
