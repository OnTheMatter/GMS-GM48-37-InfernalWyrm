<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rbc_count = 5;
rbc_left = rbc_count;
rbc_left_spawned = rbc_count
srbc_count = 0;
srbc_left = srbc_count;
srbc_left_spawned = srbc_count
wbc_count = 5;
wbc_left = rbc_count;
wbc_left_spawned = wbc_count;
wbcarmed_count = 5;
wbcarmed_left = wbcarmed_count
wbcarmed_left_spawned = wbcarmed_count
rbc_weight = 1;
srbc_weight = 1;
wbc_weight = 1;
wbcarmed_weight = 1;
boss_count = 0;
boss_left = boss_count;
boss_defeated = false;
boss_type = obj_lvl5_boss;
spawn_boss = false;
spawn_rbc = true;
spawn_srbc = false;
spawn_wbc = true;
spawn_wbcarmed = true;
lvl = -1;
lvl_name = "LIVER"
min_spawn_time = 3*room_speed;
max_spawn_time = 4*room_speed;
spawn_timer = min_spawn_time;
level_complete = false;
level_status_saved = false;
level_conversion_sprite = choose(sprite62_background_conversion_3,sprite63_background_conversion_1,sprite64_background_conversion_2);
next_level = -1;
next_level_button = instance_create(room_width/2,room_height/2,obj_button);
next_level_button.sprite_index = sprite61_button_next;
instance_deactivate_object(next_level_button);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_activate_object(next_level_button);
if (instance_exists(next_level_button))
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (rbc_left_spawned &lt;= 0) or (rbc_left &lt;= 0) spawn_rbc = false;
if (srbc_left_spawned &lt;= 0) or (srbc_left &lt;= 0) spawn_srbc = false;
if (wbc_left_spawned &lt;= 0) or (wbc_left &lt;= 0) spawn_wbc = false;
if (wbcarmed_left_spawned &lt;= 0) or (wbcarmed_left &lt;= 0) spawn_wbcarmed = false;

if (spawn_timer-- &lt;= 0)
{
    spawn_timer = irandom_range(min_spawn_time,max_spawn_time);
    var spawn_dir = random(360);
    var spawn_dis = 1000;
    var spawn_pos_x = room_width/2 + lengthdir_x(spawn_dis,spawn_dir);
    var spawn_pos_y = room_height/2 + lengthdir_y(spawn_dis,spawn_dir);
    if (spawn_rbc or spawn_wbc or spawn_wbcarmed or spawn_srbc)
    {
        var gp = ds_list_create();
        if (spawn_rbc) repeat(rbc_weight) ds_list_add(gp,obj_redbloodcell);
        if (spawn_srbc) repeat(srbc_weight) ds_list_add(gp,obj_superredbloodcell);
        if (spawn_wbc) repeat(wbc_weight) ds_list_add(gp,obj_whitebloodcell);
        if (spawn_wbcarmed) repeat(wbcarmed_weight) ds_list_add(gp,obj_whitebloodcell_armed);
        ds_list_shuffle(gp);
        var chosen_spawnlil = ds_list_find_value(gp,0);
        ds_list_destroy(gp);
        var gamer = instance_create(spawn_pos_x,spawn_pos_y,chosen_spawnlil);
        gamer.spawned_by_level = true;
        switch(chosen_spawnlil)
        {
            case obj_redbloodcell:
                rbc_left_spawned--;
            break;
            
            case obj_whitebloodcell:
                wbc_left_spawned--;
            break;
            
            case obj_whitebloodcell_armed:
                wbcarmed_left_spawned--;
            break;
            
            case obj_superredbloodcell:
                srbc_left_spawned--;
            break;
        }
        
    }
    
    if (rbc_left &lt;= 0) and (wbc_left &lt;= 0) and (wbcarmed_left &lt;= 0) and (srbc_left &lt;= 0)
    {
        if (spawn_boss)
        {
            spawn_boss = false;
            //spawn biggy
            if (boss_count &gt; 0)
            {
                repeat(boss_count)
                {
                    instance_create(spawn_pos_x,spawn_pos_y,boss_type);
                    boss_count--;
                }
            }
        }
        
        if (boss_defeated)
        {
            level_complete = true;
            instance_activate_object(next_level_button);
            if (!level_status_saved)
            {
                audio_play_sound(snd_level_complete,2,0);
                level_status_saved = true;
                var xx = instance_create(room_width/2,room_height/2,obj_story_text);
                xx.text = lvl_name + choose(" COMPLETE!"," FINISHED!"," CLEARED!");
                xx.color = c_white;
                xx.wait_on_playerspawn = false;
                if (room == rm_lvl13)
                {
                    var xx = instance_create(room_width/2,room_height/2 - 128,obj_story_text);
                    xx.text = "Thanks for playing!#You can spam the &lt;Home&gt; key# to reset level progress.";
                    xx.color = c_white;
                    xx.wait_on_playerspawn = false;        
                    audio_play_sound(sosososososorry,6,0);        
                }

                ini_open("InfernalWyrmSaveData");
                ini_write_real("Level Completion","lvl" + string(lvl),true);
                ini_close();        
            }
    
        }    
    }
    

}

if (level_complete)
{
    if (next_level_button.pressed)
    {
        room_goto(next_level);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ratio = ((-srbc_left -rbc_left -wbc_left -wbcarmed_left +  srbc_count + rbc_count + wbc_count + wbcarmed_count)/(srbc_count + rbc_count + wbc_count + wbcarmed_count))
draw_set_alpha(clamp(ratio/2,0,1));
draw_sprite(level_conversion_sprite,0,0,0);
draw_set_alpha(1);
draw_set_font(fnt_gui);
draw_set_color(c_white);
draw_text(960,64,"CORRUPTION : " + string(round(ratio*100)) + "%");
draw_set_color(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
